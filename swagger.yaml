swagger: '2.0'
info:
  title: Connections
  version: "0.1"
consumes:
  - application/json
produces:
  - application/json
security:
  # enable OAuth protection for all REST endpoints
  # (only active if the HTTP_TOKENINFO_URL environment variable is set)
  - oauth2: [uid]
paths:
  /health:
    get:
      tags: [System]
      operationId: app.get_health
      summary: Healthcheck endpoint
      security: []
      responses:
        200:
          description: app is healthy
  /metrics:
    get:
      tags: [System]
      operationId: app.get_metrics
      summary: Get request metrics
      responses:
        200:
          description: Dropwizard metrics
  /addresses:
    get:
      tags: [Connections]
      operationId: app.get_addresses
      summary: Get IP addresses and their label
      parameters:
        - name: q
          in: query
          type: string
          description: Filter by arbitrary substring
      responses:
        200:
          description: Mapping from IP to name
          schema:
            type: object
  /endpoints:
    get:
      tags: [Connections]
      operationId: app.get_endpoints
      summary: Get all public endpoints
      parameters:
        - $ref: '#/parameters/date'
      responses:
        200:
          description: Map of account ID/region to list of endpoints
  /endpoints/{account_id}/{region}:
    get:
      tags: [Connections]
      operationId: app.get_endpoints_by_account
      summary: Get all public endpoints for this AWS account/region
      parameters:
        - $ref: '#/parameters/account_id'
        - $ref: '#/parameters/region'
        - $ref: '#/parameters/date'
      responses:
        200:
          description: List of endpoints
          schema:
            type: array
            items:
              type: object
              properties:
                dest:
                  type: string
                dest_port:
                  type: integer
  /accounts:
    get:
      tags: [Connections]
      operationId: app.get_accounts
      summary: Get all AWS accounts, their name and update time
      responses:
        200:
          description: List of accounts
          schema:
            type: object
  /account-connections:
    get:
      tags: [Connections]
      operationId: app.get_account_connections
      summary: Get connections between AWS accounts
      parameters:
        - $ref: '#/parameters/date'
        - $ref: '#/parameters/include'
      responses:
        200:
          description: res
  /connections:
    get:
      tags: [Connections]
      operationId: app.get_connections
      parameters:
        - $ref: '#/parameters/date'
      responses:
        200:
          description: res
  /connections/{account_id}/{region}:
    get:
      tags: [Connections]
      operationId: app.get_connections_by_account
      summary: Get public inbound connections for a specific account and region
      parameters:
        - $ref: '#/parameters/account_id'
        - $ref: '#/parameters/region'
        - $ref: '#/parameters/date'
      responses:
        200:
          description: List of connections for this account/region
          schema:
            type: array
            items:
              type: object
              properties:
                source:
                  type: string
                dest:
                  type: string
                dest_port:
                  type: integer
                score:
                  type: float
                  description: number of occurrences found in VPC Flow Logs


parameters:
  account_id:
    name: account_id
    description: AWS account ID
    in: path
    required: true
    type: string
    pattern: "^[0-9]+$"
  region:
    name: region
    description: AWS region ID
    example: eu-west-1
    in: path
    required: true
    type: string
    pattern: "^[a-z0-9-]+$"
  date:
    name: date
    description: Date to retrieve data for
    in: query
    example: "2015-08-25"
    format: date
    type: string
  include:
    name: include
    description: Comma separated list of additional sources to include
    in: query
    type: array

securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: https://example.com/oauth2/dialog
    x-tokenInfoUrl: "{{ tokeninfo_url if tokeninfo_url }}"
    scopes:
      uid: Unique identifier of the user accessing the service.
